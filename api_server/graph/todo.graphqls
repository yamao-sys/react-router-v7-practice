type Todo {
	id: ID!
	title: String!
	content: String!
	createdAt: DateTime!
	updatedAt: DateTime!
	user: User!
}

input CreateTodoInput {
	title: String!
	content: String!
}

input UpdateTodoInput {
	title: String!
	content: String!
}

type CreateTodoValidationError {
	title: [String!]!
	content: [String!]!
}

type UpdateTodoValidationError {
	title: [String!]!
	content: [String!]!
}

type CreateTodoResponse {
	id: ID!
	validationErrors: CreateTodoValidationError!
}

type UpdateTodoResponse {
	id: ID!
	validationErrors: UpdateTodoValidationError!
}

extend type Query {
	fetchTodo(id: ID!): Todo!
	fetchTodoLists: [Todo!]!
}

extend type Mutation {
	createTodo(input: CreateTodoInput!): CreateTodoResponse!
	updateTodo(id: ID!, input: UpdateTodoInput!): UpdateTodoResponse!
	deleteTodo(id: ID!): ID!
}
